name: EC2 TLS Scan

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Download EC2 IP ranges
        run: |
          curl -s https://ip-ranges.amazonaws.com/ip-ranges.json \
            | jq -r '.prefixes[] | select(.service=="EC2") | .ip_prefix' > ec2_ranges.txt
          echo "Found EC2 ranges:"
          cat ec2_ranges.txt

      - name: Create dynamic matrix JSON
        id: set-matrix
        run: |
          # Read the file as a JSON array (each non-empty line becomes an element)
          matrix=$(jq -R -s -c 'split("\n") | map(select(length > 0))' ec2_ranges.txt)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  scan:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cidr: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set folder name for ${{ matrix.cidr }}
        id: folder
        run: |
          # Replace "/" and "." with underscores to create a safe folder name
          folder=$(echo "${{ matrix.cidr }}" | tr '/.' '__')
          echo "folder=$folder" >> $GITHUB_OUTPUT

      - name: Create folders for range
        run: |
          mkdir -p open_ips/${{ steps.folder.outputs.folder }}
          mkdir -p certs/${{ steps.folder.outputs.folder }}

      - name: Scan ${{ matrix.cidr }} with ZMap
        run: |
          echo "Scanning range: ${{ matrix.cidr }}"
          docker run --rm --network=host -v "${{ github.workspace }}":/data sec32/zmap \
            zmap -M tcp_synscan -p 443 -B 100K "${{ matrix.cidr }}" \
            -o /data/open_ips/${{ steps.folder.outputs.folder }}/open_ips.csv

      - name: Grab TLS certs with ZGrab2 for ${{ matrix.cidr }}
        run: |
          docker run --rm --network=host -v "${{ github.workspace }}":/data -i sec32/zgrab2 \
            zgrab2 tls --port 443 \
            --input-file=/data/open_ips/${{ steps.folder.outputs.folder }}/open_ips.csv \
            --output-file=/data/certs/${{ steps.folder.outputs.folder }}/certs.json

      - name: Upload artifact for ${{ matrix.cidr }}
        uses: actions/upload-artifact@v4
        with:
          name: certs-${{ matrix.cidr }}
          path: certs/${{ steps.folder.outputs.folder }}/certs.json
