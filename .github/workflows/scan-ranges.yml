name: Scan EC2 Ranges

on:
  workflow_dispatch:

jobs:
  scan-ranges:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Adjust workspace permissions
        run: chmod -R 777 "${{ github.workspace }}"

      - name: Find and process unscanned ranges
        shell: bash
        run: |
          # Setup git configuration
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Process each range directory
          for dir in ranges/*/; do
            # Skip if directory doesn't exist
            [ ! -d "$dir" ] && continue
            
            # Skip if certs.json already exists
            [ -f "$dir/certs.json" ] && {
              echo "Skipping $dir - already processed"
              continue
            }
            
            # Read CIDR range
            cidr=$(cat "$dir/cidr.txt")
            echo "Processing range: $cidr"
            
            # Run ZMap scan
            docker run --rm --network=host -v "${{ github.workspace }}":/data \
              sec32/zmap zmap -M tcp_synscan -p 443 -B 100K \
              "$cidr" -o /data/temp_open_ips.csv
            
            # Check if ZMap found any IPs
            if [ -s "${{ github.workspace }}/temp_open_ips.csv" ]; then
              # Run ZGrab2
              docker run --rm --network=host -v "${{ github.workspace }}":/data -i \
                sec32/zgrab2 zgrab2 tls --port 443 \
                --input-file=/data/temp_open_ips.csv \
                --output-file="$dir/certs.json"
              
              echo "Completed scanning range: $cidr"
            else
              echo "No open ports found for range: $cidr"
              # Create empty results file
              echo '{"results":[]}' > "$dir/certs.json"
            fi
            
            # Commit results
            git add "$dir/certs.json"
            git commit -m "Add scan results for range $cidr"
            git push
            
            # Cleanup
            rm -f "${{ github.workspace }}/temp_open_ips.csv"
          done
