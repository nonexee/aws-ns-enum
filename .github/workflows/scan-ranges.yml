name: Scan EC2 Range

on:
  workflow_dispatch:
    inputs:
      start_line:
        description: 'Start processing from line number (1-based)'
        required: true
        type: number
      batch_size:
        description: 'Number of ranges to process'
        required: true
        type: number
        default: 1

jobs:
  scan-range:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Setup workspace
        run: |
          mkdir -p scan_results
          chmod -R 777 "${{ github.workspace }}"

      - name: Process ranges
        run: |
          # Calculate line range
          START_LINE=${{ inputs.start_line }}
          END_LINE=$((START_LINE + ${{ inputs.batch_size }} - 1))
          
          echo "Processing lines $START_LINE to $END_LINE"
          
          # Extract ranges using awk instead of sed
          readarray -t RANGES < <(awk "NR >= $START_LINE && NR <= $END_LINE" ec2_ranges.txt)
          
          echo "Found ${#RANGES[@]} ranges to process"
          
          for cidr in "${RANGES[@]}"; do
            # Skip empty lines
            [ -z "$cidr" ] && continue
            
            echo "Processing range: $cidr"
            
            # Create safe filename
            safe_name=$(echo "$cidr" | tr '/' '_')
            
            # Run ZMap scan
            echo "Running ZMap scan..."
            docker run --rm --network=host -v "${{ github.workspace }}":/data \
              sec32/zmap zmap -M tcp_synscan -p 443 -B 100K \
              "$cidr" -o /data/open_ips.csv
            
            # Check if we found any open ports
            if [ -s open_ips.csv ]; then
              echo "Found open ports, running ZGrab2..."
              docker run --rm --network=host -v "${{ github.workspace }}":/data -i \
                sec32/zgrab2 zgrab2 tls --port 443 \
                --input-file=/data/open_ips.csv \
                --output-file=/data/certs.json
              
              # Compress results
              echo "Compressing results..."
              tar czf "scan_results/${safe_name}.tar.gz" certs.json
              
              # Cleanup
              rm -f certs.json open_ips.csv
              
              echo "Completed range: $cidr"
            else
              echo "No open ports found for range: $cidr"
              echo '{"results":[]}' | tar czf "scan_results/${safe_name}.tar.gz" -
            fi
          done
          
          # Commit results if any were generated
          if [ -n "$(ls -A scan_results/)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add scan_results/
            git commit -m "Add scan results for ranges $START_LINE-$END_LINE"
            git push
          else
            echo "No results were generated"
          fi
