name: Scan EC2 Range

on:
  workflow_dispatch:
    inputs:
      start_line:
        description: 'Start processing from line number (1-based)'
        required: true
        type: number
      batch_size:
        description: 'Number of ranges to process'
        required: true
        type: number
        default: 2

jobs:
  scan-range:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup workspace
        run: |
          mkdir -p scan_results
          chmod -R 777 "${{ github.workspace }}"

      - name: Process ranges
        run: |
          # Extract ranges to process
          start_idx=$((${{ inputs.start_line }} - 1))
          end_idx=$((start_idx + ${{ inputs.batch_size }}))
          
          # Get ranges for this batch
          mapfile -t ranges < <(sed -n "${start_idx},${end_idx}p" ec2_ranges.txt)
          
          for cidr in "${ranges[@]}"; do
            echo "Processing range: $cidr"
            
            # Create safe filename (replace / with _)
            safe_name=$(echo "$cidr" | tr '/' '_')
            
            # Run ZMap scan
            echo "Running ZMap scan..."
            docker run --rm --network=host -v "${{ github.workspace }}":/data \
              sec32/zmap zmap -M tcp_synscan -p 443 -B 100K \
              "$cidr" -o /data/open_ips.csv
            
            # Check if we found any open ports
            if [ -s open_ips.csv ]; then
              echo "Found open ports, running ZGrab2..."
              # Run ZGrab2
              docker run --rm --network=host -v "${{ github.workspace }}":/data -i \
                sec32/zgrab2 zgrab2 tls --port 443 \
                --input-file=/data/open_ips.csv \
                --output-file=/data/certs.json
              
              # Compress results
              echo "Compressing results..."
              tar czf "scan_results/${safe_name}.tar.gz" certs.json
              
              # Cleanup temporary files
              rm certs.json open_ips.csv
              
              echo "Completed range: $cidr"
            else
              echo "No open ports found for range: $cidr"
              # Create empty archive to mark as processed
              echo '{"results":[]}' | tar czf "scan_results/${safe_name}.tar.gz" -C - .
            fi
          done
          
          # Commit results
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add scan_results/
          git commit -m "Add scan results for ranges ${start_idx}-${end_idx}"
          git push || {
            git pull --rebase
            git push
          }
